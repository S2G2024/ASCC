image: gitpod/workspace-full-vnc
# Update 7th September to reflect code base changes
ports:
- name: BTK API
  description: BlobToolKit API
  port: 8000
  visibility: public
- name: BTK Viewer
  description: BlobToolKit Viewer
  port: 8080
  visibility: public

tasks:
  - name: SETUP - Install Nextflow
  # https://www.nextflow.io/docs/latest/getstarted.html
    init: |
      cd /workspace/treeval-curation/
      
      wget -qO- https://get.nextflow.io | bash

      chmod +x nextflow

      sudo mv nextflow /usr/local/bin

  - name: Download test data
    # Download A fungal test data set that is full enough to show some real output.
    init: |
      curl https://tolit.cog.sanger.ac.uk/test-data/resources/ascc/asccTinyTest_V2.tar.gz | tar xzf -
  
  - name: Temporary ASCC Diamond Data
    init: |
      curl https://dp24.cog.sanger.ac.uk/ascc/diamond.dmnd -o diamond.dmnd

  - name: FullPyoelii set
    init: |
      curl https://dp24.cog.sanger.ac.uk/FullPyoelii.tar.gz | tar xzf -
      gp sync-done data
  
  - name: Temporary BLASTN Data
    init: |
      curl https://dp24.cog.sanger.ac.uk/blastn.tar.gz | tar xzf -
  
  - name: Temporary Accession2TaxID Data
    init: |
      curl https://dp24.cog.sanger.ac.uk/ascc/accession2taxid.tar.gz | tar -xzf -
  
  - name: Download the NCBI taxdump database
    init: |
      mkdir ncbi_taxdump
      curl -L https://ftp.ncbi.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz | tar -C ncbi_taxdump -xzf -
  
  - name: Download the FCS-gx database
    init: |
      mkdir FCS_gx
      wget -cq https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.taxa.tsv -O FCS_gx/all.taxa.tsv
      wget -cq https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.gxi -O FCS_gx/all.gxi
      wget -cq https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.gxs -O FCS_gx/all.gxs
      wget -cq https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.meta.jsonl -O FCS_gx/all.meta.jsonl
      wget -cq https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.blast_div.tsv.gz -O FCS_gx/all.blast_div.tsv.gz
  
  - name: Download the BUSCO lineage database
    init: |
      mkdir busco_database
      curl -L https://tolit.cog.sanger.ac.uk/test-data/resources/busco/blobtoolkit.GCA_922984935.2.2023-08-03.lineages.tar.gz | tar -C busco_database -xzf -
  
  - name: Download the kraken2 database
    init: |
      mkdir kraken2
      curl -L https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/db/kraken2.tar.gz | tar -C kraken2 -xzf -
  
  - name: Download the subset of NT database
    init: |
      mkdir NT_database
      curl -L https://ftp.ncbi.nlm.nih.gov/blast/db/18S_fungal_sequences.tar.gz | tar -C NT_database -xzf -
  
  - name: Download the pacbio barcode
    init: |
      mkdir pacbio_barcode
      wget -O pacbio_barcode/SMRTbell_Barcoded_Adapter_Plate_3.0_bc2001-bc2096.fasta_.zip -c https://www.pacb.com/wp-content/uploads/SMRTbell_Barcoded_Adapter_Plate_3.0_bc2001-bc2096.fasta_.zip
      cd pacbio_barcode
      unzip SMRTbell_Barcoded_Adapter_Plate_3.0_bc2001-bc2096.fasta_.zip
      mv SMRTbell_Barcoded_Adapter_Plate_3.0_bc2001-bc2096.fasta pacbio_adaptors.fa
      rm -rf SMRTbell_Barcoded_Adapter_Plate_3.0_bc2001-bc2096.fasta_.zip __MACOSX
      cd ../
  
  - name: Download the subset of Diamond database
    init: |
      mkdir diamond
      wget -c https://tolit.cog.sanger.ac.uk/test-data/resources/diamond/UP000000212_1234679_tax.dmnd -O diamond/UP000000212_1234679_tax.dmnd
  
  - name: Download the vecscreen test data
    init: |
      mkdir vecscreen
      curl -L https://ftp.ncbi.nlm.nih.gov/blast/db/v4/16SMicrobial_v4.tar.gz | tar -C vecscreen -xzf -
      ls -lh

  - name: SETUP - Download ASCC
    init: |
      git clone -b dev https://github.com/sanger-tol/ascc.git

  - name: SETUP - btk install mamba and docker pull
    init: |
      cd /workspace
      wget "https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Mambaforge-24.3.0-0-Linux-x86_64.sh"
      bash Mambaforge-24.3.0-0-Linux-x86_64.sh -b -p /workspace/mambaforge && rm Mambaforge-24.3.0-0-Linux-x86_64.sh
      /workspace/mambaforge/bin/mamba init bash

      source ${HOME}/.bashrc

      mamba create -n tiara -c conda-forge tiara python=3.7 -y
      conda create -y -n btk -c conda-forge python=3.9

      cd /workspace
      curl https://sk13.cog.sanger.ac.uk/glClaSqua9.tgz | tar xzf -

      cd /workspace
      git clone https://github.com/blobtoolkit/blobtoolkit btk_example

      DOCKERVERSION=latest
      docker pull genomehubs/blobtoolkit-api:$DOCKERVERSION
      docker pull genomehubs/blobtoolkit-viewer:$DOCKERVERSION
  
  - name: SETUP - docker run
    init: gp sync-await data # Wait for previous 'inits' to complete
    command: |
      API_PORT=8000
      PORT=8080
      VIEWERURL=$(gp url $PORT)
      APIURL=$(gp url $API_PORT)
      DOCKERVERSION=latest

      mkdir -p /workspace/btk_data_upload

      docker rm -f btk-api-$API_PORT
      docker run -d \
      -u $UID:$GROUPS \
      --restart always \
      -p $API_PORT:8000 \
      -v /workspace/btk_data_upload/:/blobtoolkit/datasets \
      -v /workspace/logs:/blobtoolkit/logs \
      -e BTK_API_PORT=8000 \
      -e BTK_API_URL=$APIURL/api/v1 \
      -e BTK_HTTPS=false \
      -e BTK_ORIGINS="$VIEWERURL http://localhost https://localhost null" \
      -e BTK_HOST=$VIEWERURL \
      -e BTK_USE_DEFAULT_LINKS=true \
      -e BTK_FILE_PATH=/blobtoolkit/datasets \
      -e BTK_ERROR_LOG=/blobtoolkit/logs/error.log \
      -e BTK_ACCESS_LOG=/blobtoolkit/logs/access.log \
      --name btk-api-$API_PORT \
      genomehubs/blobtoolkit-api:$DOCKERVERSION

      docker rm -f btk-viewer-$PORT
      docker run -d \
      --restart always \
      -p $PORT:8080 \
      -e BTK_API_URL=$APIURL/api/v1 \
      -e BTK_BASENAME=/view \
      -e BTK_GA_ID= \
      -e BTK_GDPR_URL= \
      -e BTK_MESSAGE= \
      --name btk-viewer-$PORT \
      genomehubs/blobtoolkit-viewer:$DOCKERVERSION && gp preview $VIEWERURL/view/all#Datasets

      /workspace/mambaforge/bin/mamba init bash

      source ${HOME}/.bashrc
      gp sync-done bundle
      

  - name: MAIN - TERMINAL TO USE
    # Installing click and ruff in the mamba environment didn't work for some reason
    # It is much easier to install via that mamba env's pip3
    # and then install pretext-to-tpf
    init: gp sync-await bundle # Wait for previous 'inits' to complete
    command: |
      cd /workspace
      chmod a+x *.pl *.py
      /workspace/mambaforge/bin/mamba init bash
      source ${HOME}/.bashrc
      mamba activate btk
      pip install "blobtoolkit[full]"

      export PATH=/workspace:$PATH
      gp preview https://www.thebgacademy.org/BGA24/sessions/ascc-24
      clear
      echo "WELCOME TO ASCC!"

workspaceLocation: "/workspace"
